		===================================================
					String Handling Part-2
		===================================================
=>We know that  on the obejct of str , we can perform Both Indexing and Slicing Operations.
=>With Indexing and Slicing Operation, we can get Single Value OR Group of Values from str object.
=>To do Various Other str operations, we use Various Pre-Defined Functions. They are
------------------------------------------------------------------------------------------------------------------------------------------------
1.  capitalize()-----Examples
----------------------------
>>> s="python"
>>> print(s)
python
>>> s.capitalize()
'Python'
>>> s="python is an oop lang"
>>> s.capitalize()
'Python is an oop lang'
>>> s="python is an oop lang.python is also fun prog lang"
>>> print(s)
python is an oop lang.python is also fun prog lang
>>> s.capitalize()
'Python is an oop lang.python is also fun prog lang'
>>>
------------------------------------------------------------------------------------------
2.  title()---Examples
-------------------------------------------------------------------------------------------
>>> s="python"
>>> print(s)
python
>>> s.title()
'Python'
>>> s="python is an oop lang"
>>> s.title()
'Python Is An Oop Lang'
>>> s="python is an oop lang.python is also fun prog lang"
>>> print(s)
python is an oop lang.python is also fun prog lang
>>> s.title()
'Python Is An Oop Lang.Python Is Also Fun Prog Lang'
------------------------------------------------------------------------------------------------------------------------------------
3.upper()
------------------------------------------------------------------------------------------------------------------------------------
>>> s="python"
>>> print(s)
python
>>> s.upper()
'PYTHON'
>>> print(s)
python
>>>
>>> s="python"
>>> print(s)
python
>>> print(s,id(s))
python 1504345209392
>>> s=s.upper()
>>> print(s,id(s))
PYTHON 1504345209584
------------------------------------------------------------------------------------------------------------------------------------
4. lower()----examples
------------------------------------------------------------------------------------------------------------------------------------
>>> s="PYTHON"
>>> print(s,id(s))
PYTHON 1504345203504
>>> s=s.lower()
>>> print(s,id(s))
python 1504345209392
>>>
>>> s="PYThon"
>>> print(s)
PYThon
>>> s=s.lower()
>>> print(s)
python
------------------------------------------------------------------------------------------------------------------------------------
5. swapcase()---examples
------------------------------------------------------------------------------------------------------------------------------------
>>> s="PyThOn"
>>> print(s)
PyThOn
>>> s=s.swapcase()
>>> print(s)
pYtHoN
>>> s="PYThon"
>>> print(s)
PYThon
>>> s=s.swapcase()
>>> print(s)
pytHON
>>>
>>> s="PYTHON"
>>> print(s)
PYTHON
>>> s=s.swapcase()
>>> print(s)
python
>>> s="python"
>>> print(s)
python
>>> s=s.swapcase()
>>> print(s)
PYTHON
------------------------------------------------------------------------------------------------------------------------------------
6. isupper()
7. islower()
------------------------------------------------------------------------------------------------------------------------------------------------
>>> s="PYTHON"
>>> s.isupper()
True
>>> s.islower()
False
>>> s="python"
>>> s.islower()
True
>>> s.isupper()
False
>>> s="PYThon"
>>> s.isupper()
False
>>> s.islower()
False
>>> s="1234"
>>> s.isupper()
False
>>> s.islower()
False
>>> s="@#$%^&*"
>>> s.isupper()
False
>>> s.islower()
False
==============================================================================
8. isspace()--Examples
-------------------------------------------------------------------------------------------------------------------------------------------
>>> s=" "
>>> s.isspace()
True
>>> s="              "
>>> s.isspace()
True
>>> s="Python is an oop"
>>> s.isspace()
False
>>> s="12 45 python"
>>> s.isspace()
False
-------------------------------------------------------------------------------------------------------------------------------------
9) isdigit()--examples
-------------------------------------------------------------------------------------------------------------------------------------
>>> s="1234"
>>> s.isdigit()
True
>>> s="python123"
>>> s.isdigit()
False
>>> s="@##$%%%^%"
>>> s.isdigit()
False
>>> s="10%5"
>>> s.isdigit()
False
>>> s="12.34"
>>> s.isdigit()
False
>>>
-------------------------------------------------------------------------------------------------------------------------------------
10) isalpha()----example
-----------------------------------------------------------------------------------------------------------------------------------
>>> s="Adesh"
>>> print(s)
Adesh
>>> s.isalpha()
True
>>> s="Python123"
>>> s.isalpha()
False
>>> s="Anil Kumar"
>>> print(s)
Anil Kumar
>>> s.isalpha()
False
>>> s="##$$$^^^"
>>> s.isalpha()
False
-----------------------------------------------------------------------------------------------------------------------------------
11) isalnum()
-----------------------------------------------------------------------------------------------------------------------------------
>>> s="Python312"
>>> s.isalnum()
True
>>> s="1234"
>>> s.isalnum()
True
>>> s="Python"
>>> s.isalnum()
True
>>> s="python 123"
>>> s.isalnum()
False
>>> s="12 34 56"
>>> s.isalnum()
False
-----------------------------------------------------------------------------------------------------------------------------------
12) index()---example
-----------------------------------------------------------------------------------------------------------------------------------
>>> s="PYTHON"
>>> print(s)
PYTHON
>>> s.index("N")
5
>>> s.index("P")
0
>>> s.index("K")
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
ValueError: substring not found
>>> s="MISSISSIPPI"
>>> print(s)
MISSISSIPPI
>>> s.index("I")
1
>>> for ind,value in enumerate(s):
...		print(ind,"--->",value)
...
		0 ---> M
		1 ---> I
		2 ---> S
		3 ---> S
		4 ---> I
		5 ---> S
		6 ---> S
		7 ---> I
		8 ---> P
		9 ---> P
		10 ---> I
>>> s="ABRAKADABRA"
>>> for ind,value in enumerate(s):
...     print(ind,"--->",value)
...
0 ---> A
1 ---> B
2 ---> R
3 ---> A
4 ---> K
5 ---> A
6 ---> D
7 ---> A
8 ---> B
9 ---> R
10 ---> A
>>> for ind,value in enumerate(s):
...     if(value=="A"):
...             print(ind,"--->",value)
...
		0 ---> A
		3 ---> A
		5 ---> A
		7 ---> A
		10 ---> A
-----------------------------------------------------------------------------------------------------------------------------------
13) count()---example
-----------------------------------------------------------------------------------------------------------------------------------
>>> s="ABRAKADABRA"
>>> print(s)
ABRAKADABRA
>>> s.count('A')
5
>>> s.count('B')
2
>>> s.count('D')
1
>>> s.count('K')
1
>>> s.count('AB')
2
>>> s="MISSISSIPPI"
>>> s.count('MI')
1
>>> s.count('I')
4
>>> s.count('ISS')
2
>>> s.count('SSI')
2
>>> s.count('S')
4
>>> s.count('K')
0
------------------------------------------------------------------------------------------------------------------------------------------
14) split()
------------------------------------------------------------------------------------------------------------------------------------------
>>> s="Python is an oop lang"
>>> x=s.split()
>>> print(x,type(x))
['Python', 'is', 'an', 'oop', 'lang'] <class 'list'>
>>> len(x)
5
>>> s="Anil Kumar"
>>> x=s.split()
>>> print(x,type(x))
['Anil', 'Kumar'] <class 'list'>
------------------------------
------------------------------------------------------------------------------------------------------------------------------------------
15) split(str Delimeter)
------------------------------------------------------------------------------------------------------------------------------------------
>>> s="29-08-2023"
>>> print(s)
29-08-2023
>>> x=s.split("-")
>>> print(x)
['29', '08', '2023']
>>> print("Day=",x[0])
Day= 29
>>> print("Month=",x[1])
Month= 08
>>> print("Year=",x[2])
Year= 2023
>>> s="Mango#apple#kiwi-sberry"
>>> print(s)
Mango#apple#kiwi-sberry
>>> x=s.split("#")
>>> print(x)
['Mango', 'apple', 'kiwi-sberry']
>>> y=x[-1].split("-")
>>> print(y)
['kiwi', 'sberry']
>>> x[2:]=y[::]
>>> print(x)
['Mango', 'apple', 'kiwi', 'sberry']
>>>
------------------------------------------------------------------------------------------------------------------------------------------
16) join(iter able object)
------------------------------------------------------------------------------------------------------------------------------------------
>>> s="Python is an oop lang"
>>> x=s.split()
>>> print(x,type(x))
['Python', 'is', 'an', 'oop', 'lang'] <class 'list'>
>>>
>>> l=" "
>>> l=l.join(x)
>>> print(l)
Python is an oop lang
>>> x=["Apple","is","in","red"]
>>> s=""
>>> s=s.join(x)
>>> print(s)
Appleisinred
>>>
>>> s=" "
>>> s=s.join(x)
>>> print(s)
Apple is in red
------------------
>>> x=["Apple","is","in","red"]
>>> s="->"
>>> s=s.join(x)
>>> print(s)
Apple->is->in->red
>>>
-----------------------------
>>> x=["Apple","is","in","red"]
>>> s=" ".join(x)
>>> print(s)
Apple is in red
================================x=========================================




















