		=================================================
						 Inheritance 
		=================================================
=>Inhenritance is one of distinct features of OOPs
=>The purpose of Inheritance is that " To build Re-usable Applications in Python Object Oriented  Programming".
-----------------------------------------
=>Definition of Inheritance:
-----------------------------------------
=>The Process obtaining Data members , Methods and Constructors (Features ) of one class   into  another class is called Inheritance.
=>The class which is giving Data members , Methods and Constructors (Features ) is called  Super or  Base or Parent Class.
=>The Class which is taking Data members , Methods and Constructors (Features ) is called  Sub or  Derived or Child Class.
=>The Inheritance concept always follows Logical OR Virtual  Memory Management. This Memory Management says that " Neither we write Source Code nor Takes Physical Memory Space ".
-------------------------------------------------------------------------------------------------------------------------------------
Advatnages of Inheritance:
----------------------------------------------------------------------------------
=>When we develop any inheritance based application, we get the following advantages.
		1. Application Development Time is Less
		2. Application Memory Space is Less
		3. Application Execution time is Fast / Less 
		4. Application Performance is enhanced (Improved )
		5. Redundency (Duplication ) of the code is minimized.
-------------------------------------------------------------------------------------------------------------------------



written my me
============
Inheritance in Object-Oriented Programming
===================================
 • The Process Acquiring data members, methods, and constructors (features) from one class into another class is called inheritance,
•  Base Class: The class whose data members, methods, and constructors (features) are acquired is called the Super or Base or Parent Class.
•  Derived Class: The class that acquires the data members, methods, and constructors (features) is called the Sub or Derived or Child Class.
•  Memory Management: The inheritance concept follows logical or virtual memory management.This memory management implies that the features inherited are not      physically duplicated or written separately in the source code; rather, they are referenced or shared conserving memory and maintaining a clean code structure.