			===============================================================
						7. Identity Operators---Python Command Prompt
			===============================================================
=>The purpose of Identity Operators is that "To Compare the memory addresses of Two Objects".
=>In Python Programming, we have two types of Identity Operators. They are

				1. is 
				2. is not
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
1. is 
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
=>Syntax:    Object1  is Object2
=>Here "is" Operator Returns True Provided Object1 and Object2 Conatins Same Memory Address.
=>Here "is  " Operator Returns False Provided Object1 and Object2 Conatins Different Memory Address.
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
2. is not 
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
=>Syntax:    Object1  is not  Object2
=>Here "is not " Operator Returns True Provided Object1 and Object2 Conatins Different Memory Address.
=>Here "is not " Operator Returns False Provided Object1 and Object2 Conatins Same Memory Address.
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
Examples--On Deep and Shallow Copy
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
NOTE1: Deep Copy Objects(Same Memory Address)  and applied "is" Operator Returns True
	     Deep Copy Objects(Same Memory Address)  and applied "is not" Operator Returns False

NOTE2: Shallow Copy Objects(Different Memory Address)  and applied "is" Operator Returns False
	     Shallow Copy Objects(Different Memory Address)  and applied "is not" Operator Returns True
-----------
Examples:
----------------
>>> s1="PYTHON"
>>> print(s1,type(s1),id(s1))-----------------PYTHON <class 'str'> 2294151619680
>>> s2=s1  # Deep Copy
>>> print(s2,type(s2),id(s2))-----------------PYTHON <class 'str'> 2294151619680
>>> s1 is s2---------------------------------------True
>>> s1 is not s2----------------------------------False
-------------------------
>>> lst1=[10,"RS"]
>>> lst2=lst1.copy() # Shallow Copy
>>> print(lst1,id(lst1))---------------------------[10, 'RS'] 2294149861824
>>> print(lst2,id(lst2))---------------------------[10, 'RS'] 2294149861632
>>> lst1 is lst2-------------------------------------False
>>> lst1 is not lst2-------------------------------True
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
Examples
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
>>> a=None
>>> b=None
>>> print(a,id(a))
None 140712156112384
>>> print(b,id(b))
None 140712156112384
>>> a is b
True
>>> a is not b
False
----------------------------------------------------------
>>> d1={10:"Apple",20:"Mango"}
>>> d2={10:"Apple",20:"Mango"}
>>> print(d1,id(d1))
{10: 'Apple', 20: 'Mango'} 2666431791360
>>> print(d2,id(d2))
{10: 'Apple', 20: 'Mango'} 2666431919040
>>> d1 is d2
False
>>> d1 is not d2
True
-----------------------------------------------------------
>>> s1={10,20,30,40}
>>> s2={10,20,30,40}
>>> print(s1,id(s1))
{40, 10, 20, 30} 2666431853088
>>> print(s2,id(s2))
{40, 10, 20, 30} 2666431855552
>>> s1 is s2
False
>>> s1 is not s2
True
---------------
>>> s1={10,20,30,40}
>>> fs1=frozenset(s1)
>>> fs2=frozenset(s2)
>>> print(fs1,id(fs1))
frozenset({40, 10, 20, 30}) 2666431853088
>>> print(fs2,id(fs2))
frozenset({40, 10, 20, 30}) 2666432559840
>>> fs1 is fs2
False
>>> fs1 is not fs2
True
-----------------------------------------------------------
>>> l1=[10,"Python","HYD"]
>>> l2=[10,"Python","HYD"]
>>> print(l1,id(l1))
[10, 'Python', 'HYD'] 2666429731072
>>> print(l2,id(l2))
[10, 'Python', 'HYD'] 2666431792256
>>> l1 is l2
False
>>> l1 is not l2
True
--------------------
>>> t1=(10,"Python","HYD")
>>> t2=(10,"Python","HYD")
>>> print(t1,id(t1))
(10, 'Python', 'HYD') 2666431985472
>>> print(t2,id(t2))
(10, 'Python', 'HYD') 2666432001856
>>> t1 is t2
False
>>> t1 is not t2
True
---------------------------------------------------------------------------
>>> r1=range(10,20,2)
>>> r2=range(10,20,2)
>>> print(r1,id(r1))
range(10, 20, 2) 2666434324992
>>> print(r2,id(r2))
range(10, 20, 2) 2666434325184
>>> r1 is r2
False
>>> r1 is not r2
True
>>> ba1=bytearray([10,20,30,40])
>>> ba2=bytearray([10,20,30,40])
>>> print(ba1,id(ba1))
bytearray(b'\n\x14\x1e(') 2666432060656
>>> print(ba2,id(ba2))
bytearray(b'\n\x14\x1e(') 2666431993136
>>> ba1 is ba2
False
>>> ba1 is not ba2
True
>>> b1=bytes([10,20,30,40])
>>> b2=bytes([10,20,30,40])
>>> print(b1,id(b1))
b'\n\x14\x1e(' 2666434324800
>>> print(b2,id(b2))
b'\n\x14\x1e(' 2666434324608
>>> b1 is b2
False
>>> b1 is not b2
True
------------------------------------MOST IMP
>>> s1="INDIA"
>>> s2="INDIA"
>>> print(s1,id(s1))
INDIA 2666434324896
>>> print(s2,id(s2))
INDIA 2666434324896
>>> s1 is s2
True
>>> s1 is not s2
False
>>> s1="python"
>>> s2="python"
>>> print(s1,id(s1))
python 2666429660160
>>> print(s2,id(s2))
python 2666429660160
>>> s1 is s2
True
>>> s1 is not s2
False
>>>
>>> s1="ROSSUM"
>>> s2="ROSSUm"
>>> print(s1,id(s1))
ROSSUM 2666434324704
>>> print(s2,id(s2))
ROSSUm 2666434324512
>>> s1 is s2
False
>>> s1 is not s2
True
>>>
>>> s1="INDIA"
>>> s2="INDAI"
>>> print(s1,id(s1))
INDIA 2666434324896
>>> print(s2,id(s2))
INDAI 2666434324656
>>> s1 is s2
False
>>> s1 is not s2
True
----------------------------------------------------------
>>> a=2+3j
>>> b=2+3j
>>> print(a,id(a))
(2+3j) 2666431937392
>>> print(b,id(b))
(2+3j) 2666431937616
>>> a is b
False
>>> a is not b
True
-------------------------------------------------------------------
>>> a=True
>>> b=True
>>> print(a,id(a))
True 140712156112320
>>> print(b,id(b))
True 140712156112320
>>> a is b
True
>>> a is not b
False
>>>
>>> a=False
>>> b=True
>>> print(a,id(a))
False 140712156112352
>>> print(b,id(b))
True 140712156112320
>>> a is b
False
>>> a is not b
True
----------------------------------------------
>>> a=1.2
>>> b=1.2
>>> print(a,id(a))
1.2 2666429132400
>>> print(b,id(b))
1.2 2666431922800
>>> a is b
False
>>> a is not b
True
-----------------------------------------------MOST IMP----------------------------------------------------------
>>> a=256
>>> b=256
>>> print(a,id(a))
256 140712156916120
>>> print(b,id(b))
256 140712156916120
>>> a is b
True
>>> a is not b
False
>>>
>>> a=257
>>> b=257
>>> print(a,id(a))
257 2666431937392
>>> print(b,id(b))
257 2666431937488
>>> a is b
False
>>> a is not b
True
>>> a=10
>>> b=10
>>> print(a,id(a))
10 140712156908248
>>> print(b,id(b))
10 140712156908248
>>> a is b
True
>>> a is not b
False
>>> a=0
>>> b=0
>>> print(a,id(a))
0 140712156907928
>>> print(b,id(b))
0 140712156907928
>>> a is b
True
>>> a is not b
False
>>>
>>>
>>> a=-1
>>> b=-1
>>> print(a,id(a))
-1 140712156907896
>>> print(b,id(b))
-1 140712156907896
>>> a is b
True
>>> a is not b
False
>>> a=-5
>>> b=-5
>>> print(a,id(a))
-5 140712156907768
>>> print(b,id(b))
-5 140712156907768
>>> a is b
True
>>> a is not  b
False
>>>
>>> a=-6
>>> b=-6
>>> print(a,id(a))
-6 2666431937488
>>> print(b,id(b))
-6 2666431937392
>>> a is b
False
>>> a is not b
True
-----------------------MOST MOST IMP-------------------------------------------------------------------

>>> a,b=300,300
>>> print(a,id(a))
300 2666431922960
>>> print(b,id(b))
300 2666431922960
>>> a is b
True
>>> a is not b
False
-----------------------------------
>>> a,b=1.2,1.2
>>> print(a,id(a))
1.2 2666429132400
>>> print(b,id(b))
1.2 2666429132400
>>> a is b
True
>>> a is not b
False
----------------------------------------------------
>>> a,b=300,300
>>> print(a,id(a))
300 2666431922960
>>> print(b,id(b))
300 2666431922960
>>> a is b
True
>>> a is not b
False
>>>
>>>
>>> a,b=1.2,1.2
>>> print(a,id(a))
1.2 2666429132400
>>> print(b,id(b))
1.2 2666429132400
>>> a is b
True
>>> a is not b
False
>>>
>>>
>>> a,b=10,20
>>> a is b
False
>>> a is not b
True
>>>
>>>
>>> a,b=2+3j,2+3j
>>> a is b
True
>>> a is not b
False
>>>
>>>
>>>
>>> lst1,lst2=[10,"KVR"],[10,"KVR"]
>>> print(lst1,id(lst1))
[10, 'KVR'] 2666431971840
>>> print(lst2,id(lst2))
[10, 'KVR'] 2666434347648
>>> d1,d2={10:"Apple"},{10:"Apple"}
>>> d1 is d2
False
>>> d1 is not d2
True
=============================================================================================
>>> a=1234.56
>>> round(a,1)---------------------1234.6
>>> a=1234.54
>>> round(a,1)-------------------1234.5
-------------------------------
>>> a=1234.562
>>> round(a,2)--------------------1234.56
>>> a=1234.565
>>> round(a,2)--------------------1234.57
-------------------------------
>>> a=1234.562
>>> round(a,-2)----------------1200.0
>>> round(a,-3)----------------1000.0
>>> round(a,-4)----------------0.0
==========================================x==================================================
































































---------------------------------------------------------------------------







-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
