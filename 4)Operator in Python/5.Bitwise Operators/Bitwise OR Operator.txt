			=====================================================
						3. Bitwise OR Operator ( | )
			=====================================================
=>Syntax:      Var1 | Var2
=>The Functionality of Bitwise OR Operator ( | ) is Show Bellow
			=====================================================
					Var1			Var2			Var1 | Var2
			=====================================================
					0			1				1	
					1			0				1
					0			0				0
					1			1				1
			=====================================================
----------------------------------
Examples1
----------------------------------
>>> 0|1-------------------1
>>> 1|0-------------------1
>>> 0|0-------------------0
>>> 1|1-------------------1
------------------------------------------
Examples2:
------------------------------------------
>>>a=10----------------------  1  0  1  0
>>>b=5------------------------  0 1  0  1
		----------------------------
>>>c=a|b		           1  1  1  1------------Result is 15
>>>print(c)-----------15
----------------------
>>>a=10-----------------------1010
>>>b=10-----------------------1010
				--------------------------
>>>c=a|b				 1010------------------Result is 10
>>>print(c)
---------------------------------------------
Most Imp
---------------------------------------------
>>> 10|5-------------------15
>>> 10 or 5---------------10
>>> 5 or 10---------------5
>>> 5|10-------------------15
-----------------------------------------------
Most Imp
-----------------------------------------------
>>>s1={10,20,30}
>>>s2={20,25,35}
>>>s3=s1.union(s2)
>>> print(s3,type(s3))---------------------{35, 20, 25, 10, 30} <class 'set'>
----------------------OR-----------------------
>>> s1={10,20,30}
>>> s2={20,25,35}
>>> s3=s1|s2	# Bitwise OR ( | )
>>> print(s3,type(s3))---------------------{35, 20, 25, 10, 30} <class 'set'>
--------------------------
>>> s1={"Apple","Mango"}
>>> s2={"Mango","Kiwi"}
>>> s3=s1|s2  #Bitwise OR Operator
>>> print(s3,type(s3))--------------{'Apple', 'Kiwi', 'Mango'} <class 'set'>
-------------------------------
>>> "Apple"|"Mango"------------------------TypeError: unsupported operand type(s) for |: 'str' and 'str'
>>> "Apple" or "Mango"-------------------'Apple'
--------------------------------------------------------
>>> s1={1.2,3.4}
>>> s2={1.3,3.4,5.6}
>>> s3=s1|s2		# Bitwise OR Operator
>>> print(s3,type(s3))---------------{1.2, 1.3, 3.4, 5.6} <class 'set'>
---------------------
>>> s1={1.2,3.4}
>>> s2={1.3,3.4,5.6} 
>>> s3=s1|s2   #  Bitwise OR Operator
>>> print(s3,type(s3))--------------{1.2, 1.3, 3.4, 5.6} <class 'set'>
>>> 1.2|1.3-----------------------------TypeError: unsupported operand type(s) for |: 'float' and 'float'
>>> 1.2 or 1.3-------------------------1.2
================================x======================================================

