				================================================
							set
				================================================
Index
---------------------
=>Properties of set
=>Types of sets
=>Pre-defined functions in set
=>Nested OR Inner sets
=>Combination of list ,tuple with set
=>Programming Examples
---------------------------------------------------------------------------------------------------------------------------------------------------------------------
Properties of set
---------------------------------------------------------------------------------------------------------------------------------------------------------------------
=>'set' is one of the pre-defined class and treated as Set Data Type.
=>The purpose of 'set' data type is that "To store Multiple Values either of Same Type or Different Type or Both the 
     Types in single Object with Unique Values(No Duplicates are allowed)".
=>The elements / Values of set data type must written / Stored in curly Braces { }
=>Syntax:   objname={Val1,Val2,.......,Val-n}
=>An obejct set never Maintains Insertion Order bcoz PVM displays the elements of set in any one of Possibilityof 
    Elements.
=>On the object of set, we can't perform Indexing and Slicing Operations bcoz Set never Maintains Insertion Order
=>An object of set belongs to Both IMMUTABLE ('set' object does not support item assignment) and MUTABLE in the 
   case  adding, Deleting, modifying..etc
=>=>In Python Programming, we can create Two Types of set objects. They are

			1. Empty set
			2. Non-Empty set
--------------------------
1. Empty set
--------------------------
=>An Empty set is one , which does not contain any Elements and whose length is 0
=>Syntax:    varname=set()
--------------------------
2. Non-Empty set
--------------------------
=>A Non-Empty set is one , which contains  Elements and whose length is >0
=>Syntax:    varname={Val1,Val2....Val-n}
			(OR)
		   varname=set(object)
---------------------------------------------------------------------------------------------------------------------------------------------------------------------
Examples
---------------------------------------------------------------------------------------------------------------------------------------------------------------------
>>> s1={10,20,30,40,50,60,10,20}
>>> print(s1,type(s1))---------------------------{50, 20, 40, 10, 60, 30} <class 'set'>
>>> print(s1,type(s1))--------------------------{50, 20, 40, 10, 60, 30} <class 'set'>
>>> s1[0]-------------------------------------------TypeError: 'set' object is not subscriptable
>>> s1[3:]-------------------------------------------TypeError: 'set' object is not subscriptable
>>> s2={10,"SriKanth",45.67,"Python",True}
>>> print(s2,type(s2),id(s2))----------------{True, 'Python', 'SriKanth', 10, 45.67} <class 'set'> 1934488462592
>>> s2[1]="Django"-------------------------TypeError: 'set' object does not support item assignment
>>> s2.add("Django")
>>> print(s2,type(s2),id(s2))-------------{True, 'Django', 'Python', 'SriKanth', 10, 45.67} <class 'set'> 1934488462592
------------------------------------------------------------
>>> s1={}
>>> print(s1,type(s1))-----------------{} <class 'dict'>
>>> s2=set()
>>> print(s2,type(s2))----------------set() <class 'set'>
>>> len(s2)------------------------------0
-------------------------
>>> s3={10,"Shiny","Nodes","Notes",33.33}
>>> print(s3,type(s3))-----------{33.33, 'Nodes', 'Shiny', 'Notes', 10} <class 'set'>
>>> len(s3)------------------------5
-------------------------------------------------------
>>> s1="PYTHON"
>>> s2=set(s1)
>>> print(s2,type(s2))---------------{'Y', 'P', 'O', 'N', 'T', 'H'} <class 'set'>
-------------------
>>> l1=[10,10,20,30,40,10,20]
>>> print(l1,type(l1))-------------------[10, 10, 20, 30, 40, 10, 20] <class 'list'>
>>> s1=set(l1)
>>> print(s1,type(s1))---------------{40, 10, 20, 30} <class 'set'>
----------------------
>>> s1="MISSISSIPPI"
>>> print(s1,type(s1))--------------MISSISSIPPI <class 'str'>
>>> s2=set(s1)
>>> print(s2,type(s2))-------------{'I', 'S', 'P', 'M'} <class 'set'>
===========================================x===============================================


























---------------------------------------------------------------------------------------------------------------------------------------------------------------------


